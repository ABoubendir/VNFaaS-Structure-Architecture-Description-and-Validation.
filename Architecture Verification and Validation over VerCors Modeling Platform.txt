VerCors allows to describe a software-component architecture specification with its interfaces and the behavior of the primitive components. The VCE module performs a first validation regarding the structural coherency of the model. 

This test allows to verify the validity of the model and guarantees that the code generation will terminate correctly and will not fail during deployment of the VNF component. 

Based on these descriptions, a behavioral model of the component is generated by the Architecture Description Language To Network (ADL2N) converter in a form of a dedicated behavioral semantic model towards the Parameterized networks (pNets) module. 

Then, abstraction functions (ABS) transform this semantic model until it becomes suitable for model-checking. Finally, the CADP tool, a model verificator, verifies the correctness of the model with respect to the set of properties (requirements) and in case of errors, provides error description. 

If requirements are proven correct on the VCE specification, we generate a set of files allowing the deployment of the component (ADL and Interface Description Language (IDL) for interface definition in the form of Java interfaces). These files are then processed by the GCM component factory and executed within the GCM/ProActive execution environment.
